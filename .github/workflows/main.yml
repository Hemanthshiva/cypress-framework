name: Cypress Tests using Cypress Docker Image

on: push

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cypress install
        uses: cypress-io/github-action@v6.5.0
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node --version
      - run: node -p 'os.cpus()'

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node info
        run: node -v

      - name: 'UI Tests - Chrome'
        id: test
      #   uses: cypress-io/github-action@v6.5.0
      #   with:
      #     build: yarn cypress info
      #     browser: chrome
      #     record: true
      #     parallel: true
      #     group: 'UI - Chrome'
      #     spec: cypress/e2e/cucumber-tests/featureFiles/*
      #     config-file: cypress.config.ts
      # - name: 'Run Tests'
        run: yarn cy:parallel
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: 'cypress:server:args'

      - name: Wait for other checks to succeed
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'Run Tests'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      - name: 'Generate report'
        if: success() || failure()
        run: yarn cy:report

      - name: 'Upload report'
        if: always()
        uses: actions/upload-artifact@v3
        with: 
          name: cypress-report
          path: cypress/cucumber-html-report


  # generate-report:
  #   needs: [ui-chrome-tests]
  #   if: success()
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Dowload artifacts
  #       uses: actions/download-artifact@v3.0.1
  #       with:
  #         name: ReportsData
  #         path: cypress/cucumber-html-report/
      
  #     - name: Upload report
  #       if: always()
  #       uses: actions/upload-artifact@v3
  #       with: 
  #         name: cypress-report
  #         path: cypress/cucumber-html-report
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-reports:
    needs: [ui-chrome-tests]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Dowload artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          name: cypress-report
          path: cypress/cucumber-html-report/
      - name: Setup Github report page
        uses: actions/configure-pages@v5.0.0
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with: 
          path: cypress/cucumber-html-report/
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
